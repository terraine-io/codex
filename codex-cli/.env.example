# WebSocket Server Environment Configuration

# Required: OpenAI API Key (for OpenAI models)
OPENAI_API_KEY=your-openai-api-key-here

# Optional: Anthropic API Key (for Claude models)
# ANTHROPIC_API_KEY=your-anthropic-api-key-here

# Optional: AI Provider (openai, anthropic, google - auto-detected from model if not specified)
# PROVIDER=openai

# Optional: AI Model (defaults to codex-mini-latest for better file operations)
# MODEL=codex-mini-latest
# Examples:
# MODEL=gpt-4                    # OpenAI GPT-4
# MODEL=claude-3-5-sonnet-20241022  # Anthropic Claude (requires PROVIDER=anthropic)
# MODEL=gemini-pro              # Google Gemini (requires PROVIDER=google)

# Optional: Working directory for the server
# If specified, the server will change to this directory on startup
# Can be relative or absolute path
WORKING_DIRECTORY=/path/to/your/project

# Context management strategy
# Possible values: "threshold", "dummy" 
CONTEXT_STRATEGY=threshold

# Threshold for automatic context compaction (0.0-1.0, default: 0.8)
CONTEXT_COMPACTION_THRESHOLD=0.8

# CORS Configuration for WebSocket connections
# Comma-separated list of allowed origins for browser-based clients
# If not set or empty, all origins will be allowed
# Example: ALLOWED_ORIGINS=http://localhost:3000,https://myapp.com
ALLOWED_ORIGINS=http://localhost:8081

# Artifacts Configuration
# Path to the artifacts index JSON file
ARTIFACTS_INDEX_PATH=/path/to/artifact_catalog.json
